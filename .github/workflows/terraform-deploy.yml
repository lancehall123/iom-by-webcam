name: Deploy Infrastructure with Terraform

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Terraform Init
        run: terraform -chdir=infra init
      - name: Import existing resources if they exist
        run: |
            PROJECT_ID="${{ secrets.PROJECT_ID }}"
            REGION="${{ secrets.REGION }}"

    
            if gcloud run services describe image-processor --region="$REGION" --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.cloud_run.google_cloud_run_v2_service.service projects/$PROJECT_ID/locations/$REGION/services/image-processor
            fi

      - name: Import existing resources if they exist
        run: |
            PROJECT_ID="${{ secrets.PROJECT_ID }}"
            REGION="${{ secrets.REGION }}"
            if gcloud run services describe image-processor --region="$REGION" --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.cloud_run.google_cloud_run_v2_service.service projects/$PROJECT_ID/locations/$REGION/services/image-processor
            fi  
            if gcloud scheduler jobs describe fetch-and-process-images --location="$REGION" --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.scheduler.google_cloud_scheduler_job.job projects/$PROJECT_ID/locations/$REGION/jobs/fetch-and-process-images
            fi

    
            if gsutil ls -p "$PROJECT_ID" gs://${{ secrets.BUCKET_NAME }} &>/dev/null; then
            terraform import module.gcs.google_storage_bucket.media ${{ secrets.BUCKET_NAME }}
            fi

    
            if gcloud secrets describe youtube_oauth --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.secret.google_secret_manager_secret.oauth projects/$PROJECT_ID/secrets/youtube_oauth
            fi

    
            if gcloud iam service-accounts describe github-actions@$PROJECT_ID.iam.gserviceaccount.com --project="$PROJECT_ID" &>/dev/null; then
            terraform import google_service_account.github_actions projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com
            fi

            if gcloud scheduler jobs describe fetch-and-process-images --location="$REGION" --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.scheduler.google_cloud_scheduler_job.job projects/$PROJECT_ID/locations/$REGION/jobs/fetch-and-process-images
            fi

    
            if gsutil ls -p "$PROJECT_ID" gs://${{ secrets.BUCKET_NAME }} &>/dev/null; then
            terraform import module.gcs.google_storage_bucket.media ${{ secrets.BUCKET_NAME }}
            fi

    
            if gcloud secrets describe youtube_oauth --project="$PROJECT_ID" &>/dev/null; then
            terraform import module.secret.google_secret_manager_secret.oauth projects/$PROJECT_ID/secrets/youtube_oauth
            fi

    
            if gcloud iam service-accounts describe github-actions@$PROJECT_ID.iam.gserviceaccount.com --project="$PROJECT_ID" &>/dev/null; then
            terraform import google_service_account.github_actions projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com
            fi

      - name: Terraform Plan
        run: |
          terraform -chdir=infra plan \
            -var="project_id=${{ secrets.PROJECT_ID }}" \
            -var="region=${{ secrets.REGION }}" \
            -var="bucket_name=${{ secrets.BUCKET_NAME }}" \
            -var="youtube_oauth_json=${{ secrets.YOUTUBE_OAUTH_JSON }}" \
            -var="image_url=${{ secrets.IMAGE_URL }}"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform -chdir=infra apply -auto-approve \
            -var="project_id=${{ secrets.PROJECT_ID }}" \
            -var="region=${{ secrets.REGION }}" \
            -var="bucket_name=${{ secrets.BUCKET_NAME }}" \
            -var="youtube_oauth_json=${{ secrets.YOUTUBE_OAUTH_JSON }}" \
            -var="image_url=${{ secrets.IMAGE_URL }}"
