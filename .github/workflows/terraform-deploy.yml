name: Deploy Infrastructure with Terraform

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{ secrets.REGION }}
      BUCKET: ${{ secrets.BUCKET_NAME }}
      YT_SECRET: ${{ secrets.YOUTUBE_OAUTH_JSON }}
      IMAGE_URL: ${{ secrets.IMAGE_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan (Dry Run)
        run: |
          terraform -chdir=infra plan \
            -var="project_id=$PROJECT_ID" \
            -var="region=$REGION" \
            -var="bucket_name=$BUCKET" \
            -var="youtube_oauth_json=DUMMYSTRING" \
            -var="image_url=$IMAGE_URL"

      - name: Import existing resources (conditionally)
        run: |
          set -e
          cd infra
          IMPORT_FAILED=0

          echo "Running conditional imports..."

          terraform init -input=false

          terraform state list | grep -q module.cloud_run.google_cloud_run_v2_service.service || \
          (gcloud run services describe image-processor --region="$REGION" --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.cloud_run.google_cloud_run_v2_service.service "projects/$PROJECT_ID/locations/$REGION/services/image-processor") || { echo "Import failed: Cloud Run"; IMPORT_FAILED=1; }

          terraform state list | grep -q module.scheduler.google_cloud_scheduler_job.job || \
          (gcloud scheduler jobs describe fetch-and-process-images --location="$REGION" --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.scheduler.google_cloud_scheduler_job.job "projects/$PROJECT_ID/locations/$REGION/jobs/fetch-and-process-images") || { echo "Import failed: Cloud Scheduler"; IMPORT_FAILED=1; }

          terraform state list | grep -q module.gcs.google_storage_bucket.media || \
          (gsutil ls -p "$PROJECT_ID" gs://$BUCKET &>/dev/null && \
          terraform import module.gcs.google_storage_bucket.media "$BUCKET") || { echo "Import failed: GCS Bucket"; IMPORT_FAILED=1; }

          terraform state list | grep -q module.secret.google_secret_manager_secret.oauth || \
          (gcloud secrets describe youtube_oauth --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.secret.google_secret_manager_secret.oauth "projects/$PROJECT_ID/secrets/youtube_oauth") || { echo "Import failed: Secret Manager"; IMPORT_FAILED=1; }

          terraform state list | grep -q google_service_account.github_actions || \
          (gcloud iam service-accounts describe github-actions@$PROJECT_ID.iam.gserviceaccount.com --project="$PROJECT_ID" &>/dev/null && \
          terraform import google_service_account.github_actions "projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com") || { echo "Import failed: Service Account"; IMPORT_FAILED=1; }

          if [[ "$IMPORT_FAILED" == "1" ]]; then
            echo "Import failed. Skipping terraform apply."
            exit 0
          fi

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          terraform -chdir=infra apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="region=$REGION" \
            -var="bucket_name=$BUCKET" \
            -var="youtube_oauth_json=$YT_SECRET" \
            -var="image_url=$IMAGE_URL"
