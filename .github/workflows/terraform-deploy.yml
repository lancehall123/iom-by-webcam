name: Deploy Infrastructure with Terraform

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      REGION: ${{ secrets.REGION }}
      BUCKET: ${{ secrets.BUCKET_NAME }}
      IMPORT_FAILED: 0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: |
          terraform -chdir=infra plan \
            -var="project_id=${PROJECT_ID}" \
            -var="region=${REGION}" \
            -var="bucket_name=${BUCKET}" \
            -var="youtube_oauth_json=DUMMY" \
            -var="image_url=${{ secrets.IMAGE_URL }}"

      - name: Import existing resources
        run: |
          set -e
          cd infra
          echo "Starting import operations..."

          # Cloud Run
          echo "Importing Cloud Run service..."
          terraform state list | grep -q module.cloud_run.google_cloud_run_v2_service.service || \
          (gcloud run services describe image-processor --region="$REGION" --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.cloud_run.google_cloud_run_v2_service.service "projects/$PROJECT_ID/locations/$REGION/services/image-processor") || \
          { echo "Failed to import Cloud Run"; IMPORT_FAILED=1; }

          # Cloud Scheduler
          echo "Importing Cloud Scheduler job..."
          terraform state list | grep -q module.scheduler.google_cloud_scheduler_job.job || \
          (gcloud scheduler jobs describe fetch-and-process-images --location="$REGION" --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.scheduler.google_cloud_scheduler_job.job "projects/$PROJECT_ID/locations/$REGION/jobs/fetch-and-process-images") || \
          { echo "Failed to import Cloud Scheduler job"; IMPORT_FAILED=1; }

          # GCS Bucket
          echo "Importing GCS bucket..."
          terraform state list | grep -q module.gcs.google_storage_bucket.media || \
          (gsutil ls -p "$PROJECT_ID" gs://$BUCKET &>/dev/null && \
          terraform import module.gcs.google_storage_bucket.media "$BUCKET") || \
          { echo "Failed to import GCS bucket"; IMPORT_FAILED=1; }

          # Secret Manager
          echo "Importing Secret Manager secret..."
          terraform state list | grep -q module.secret.google_secret_manager_secret.oauth || \
          (gcloud secrets describe youtube_oauth --project="$PROJECT_ID" &>/dev/null && \
          terraform import module.secret.google_secret_manager_secret.oauth "projects/$PROJECT_ID/secrets/youtube_oauth") || \
          { echo "Failed to import Secret Manager secret"; IMPORT_FAILED=1; }

          # Service Account
          echo "Importing Service Account..."
          terraform state list | grep -q google_service_account.github_actions || \
          (gcloud iam service-accounts describe github-actions@$PROJECT_ID.iam.gserviceaccount.com --project="$PROJECT_ID" &>/dev/null && \
          terraform import google_service_account.github_actions "projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com") || \
          { echo "Failed to import Service Account"; IMPORT_FAILED=1; }

          echo "IMPORT_FAILED=$IMPORT_FAILED" >> $GITHUB_ENV

      - name: Terraform Apply
        if: env.IMPORT_FAILED == '0' && github.ref == 'refs/heads/main'
        run: |
          echo "All imports successful. Applying Terraform changes..."
          terraform -chdir=infra apply -auto-approve \
            -var="project_id=${PROJECT_ID}" \
            -var="region=${REGION}" \
            -var="bucket_name=${BUCKET}" \
            -var="youtube_oauth_json=${{ secrets.YOUTUBE_OAUTH_JSON }}" \
            -var="image_url=${{ secrets.IMAGE_URL }}"

      - name: Skipping Terraform Apply
        if: env.IMPORT_FAILED != '0'
        run: |
          echo "Skipping terraform apply due to import failure."
