name: Deploy Infrastructure with Terraform

on:
  push:
    paths:
      - 'infra/**'
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.2

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Terraform Init
        run: terraform -chdir=infra init

      - name: Terraform Plan
        run: |
          terraform -chdir=infra plan \
            -var="project_id=${{ secrets.PROJECT_ID }}" \
            -var="region=${{ secrets.REGION }}" \
            -var="bucket_name=${{ secrets.BUCKET_NAME }}" \
            -var="youtube_oauth_json=DUMMYSTRING" \
            -var="image_url=${{ secrets.IMAGE_URL }}"

      - name: Import existing resources
        id: import
        run: |
          set -e
          cd infra
          PROJECT_ID="${{ secrets.PROJECT_ID }}"
          REGION="${{ secrets.REGION }}"
          BUCKET="${{ secrets.BUCKET_NAME }}"

          IMPORT_ERRORS=0

          # Helper to try import and catch error
          try_import() {
            if ! terraform state list | grep -q "$1"; then
              echo "Importing $1..."
              if eval "$2"; then
                echo "✅ Imported $1"
              else
                echo "❌ Failed to import $1"
                IMPORT_ERRORS=1
              fi
            fi
          }

          # Cloud Run
          try_import "module.cloud_run.google_cloud_run_v2_service.service" \
            "gcloud run services describe image-processor --region=$REGION --project=$PROJECT_ID &>/dev/null && \
             terraform import module.cloud_run.google_cloud_run_v2_service.service projects/$PROJECT_ID/locations/$REGION/services/image-processor"

          # Cloud Scheduler
          try_import "module.scheduler.google_cloud_scheduler_job.job" \
            "gcloud scheduler jobs describe fetch-and-process-images --location=$REGION --project=$PROJECT_ID &>/dev/null && \
             terraform import module.scheduler.google_cloud_scheduler_job.job projects/$PROJECT_ID/locations/$REGION/jobs/fetch-and-process-images"

          # GCS Bucket
          try_import "module.gcs.google_storage_bucket.media" \
            "gsutil ls -p $PROJECT_ID gs://$BUCKET &>/dev/null && \
             terraform import module.gcs.google_storage_bucket.media $BUCKET"

          # Secret Manager
          try_import "module.secret.google_secret_manager_secret.oauth" \
            "gcloud secrets describe youtube_oauth --project=$PROJECT_ID &>/dev/null && \
             terraform import module.secret.google_secret_manager_secret.oauth projects/$PROJECT_ID/secrets/youtube_oauth"

          # Service Account
          try_import "google_service_account.github_actions" \
            "gcloud iam service-accounts describe github-actions@$PROJECT_ID.iam.gserviceaccount.com --project=$PROJECT_ID &>/dev/null && \
             terraform import google_service_account.github_actions projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com"

          # Service Account Key
          try_import "google_service_account_key.github_key" \
            "KEY_ID=$(gcloud iam service-accounts keys list \
              --iam-account=github-actions@$PROJECT_ID.iam.gserviceaccount.com \
              --project=$PROJECT_ID --format='value(name)' | head -n1 | cut -d'/' -f4) && \
             [ -n \"$KEY_ID\" ] && \
             terraform import google_service_account_key.github_key projects/$PROJECT_ID/serviceAccounts/github-actions@$PROJECT_ID.iam.gserviceaccount.com/keys/$KEY_ID"

          echo "IMPORT_ERRORS=$IMPORT_ERRORS" >> "$GITHUB_ENV"

      - name: Terraform Apply
        if: env.IMPORT_ERRORS == '0'
        run: |
          terraform -chdir=infra apply -auto-approve \
            -var="project_id=${{ secrets.PROJECT_ID }}" \
            -var="region=${{ secrets.REGION }}" \
            -var="bucket_name=${{ secrets.BUCKET_NAME }}" \
            -var="youtube_oauth_json=${{ secrets.YOUTUBE_OAUTH_JSON }}" \
            -var="image_url=${{ secrets.IMAGE_URL }}"

      - name: Skip Apply due to import errors
        if: env.IMPORT_ERRORS != '0'
        run: echo "Skipping apply due to import errors."
